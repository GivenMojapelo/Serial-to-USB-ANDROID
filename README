Serial-To-USB-ANDROID is an implementation of Serial to USB driver using the Android USB Host API. 

Copyright (C) 2012 JeD <jedartois@gmail.com>
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

REQUIREMENTS
--------------------------------------------------------------------------------------------
ANDROID with  USB Host API
--------------------------------------------------------------------------------------------

END USE EXAMPLE
----------------------------------------------------------------------------------------

private IFtdi ftidusb=null;
ftidusb = new Ftdi_Impl("0403:6001", <myactivity>);
ftidusb.setbaudrate(115200);


ftiusb.addEventListener(new Ftid_listener() 
{
			@Override
			public void incomingDataEvent(Ftdi_Event evt) 
			{
      System.out.println("Event from Usb Serial"+new String(evt.read));

			}
});


ftiusb.write("Hello World".getbytes());


------------------------------------------------------------------------------------------------
Serial-To-USB-Android Interface
------------------------------------------------------------------------------------------------


public interface IFtdi {

  	public abstract void open();
	public abstract void close();
	public abstract boolean setbaudrate(int bitrate);
	public abstract boolean isConnected();

	public abstract void write(byte[] data) throws Ftdi_Error;
	public abstract void write(String data) throws Ftdi_Error;

	public abstract byte[] read() throws Ftdi_Error;

	public abstract void addEventListener (Ftid_listener listener);
	public abstract void removeEventListener (Ftid_listener listener);
}



